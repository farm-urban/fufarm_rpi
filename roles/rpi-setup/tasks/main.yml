---
- name: Update APT
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist

# - name: Remove uneeded software packages
#   ansible.builtin.apt:
#     cache_valid_time: 300 # 5 minutes
#     pkg:
#       - pulseaudio
#       - pipewire
#     state: absent
#     purge: true
#   when: ansible_facts.wlan0.active # Could just ignore errors?

- name: Install generally useful packages
  ansible.builtin.apt:
    cache_valid_time: 300 # 5 minutes
    pkg:
      - screen
      - iotop
    state: present

- name: Use vi as editor for pi user
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.profile
    regexp: "^export EDITOR="
    line: "export EDITOR=/usr/bin/vi"

- name: Use emacs mode for terminal
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.profile
    line: "set -o emacs"
    regexp: "^set -o emacs"

- name: Clean up APT
  ansible.builtin.apt:
    autoremove: true
    autoclean: true

- name: Make /opt writeable by raspberry pi user
  ansible.builtin.file:
    path: /opt
    owner: "{{ ansible_user }}"

- name: Disable wifi (we only connect via the router with ethernet)
  ansible.builtin.lineinfile:
    path: /boot/firmware/config.txt
    line: "dtoverlay=disable-wifi"
    regexp: "^dtoverlay=disable-wifi"
  when: disable-wifi

# Need to reboot here as there could be a kernel upgrade
- name: Check the reboot-required file
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Launch the reboot
  ansible.builtin.reboot:
    msg: "Reboot with ansible..."
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists

  # Turn off sound options - as pulse audo kept using cpu
# - name: Blacklist the snd_bcm2835 sound driver module
#   community.general.kernel_blacklist:
#     name: snd_bcm2835
#     state: present

# - name: Turn off sound
#   ansible.builtin.lineinfile:
#     path: /boot/config.txt
#     regexp: "^dtparam=audio=on"
#     line: dtparam=audio=off

# - name: Remove hdmi sound
#   ansible.builtin.lineinfile:
#     path: /boot/config.txt
#     regexp: "^dtoverlay=vc4-kms-v3d"
#     line: dtoverlay=vc4-kms-v3d,noaudio

# # For VNC
# - name: Force creation of graphical desktop when no display for VNC
#   ansible.builtin.lineinfile:
#     path: /boot/config.txt
#     regexp: "^#hdmi_force_hotplug=1"
#     line: hdmi_force_hotplug=1
